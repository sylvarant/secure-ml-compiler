#! /bin/bash

#====================================================
# file: compile.sh
#----------------------------------------------------
# - Compile miniml into a c module
# By 
#====================================================

Binfold="./bin"
options="dsnr:"
Usage="Usage: `basename $0` [-$options] sourcefile"
Compiler="src/main.native"
Outfold="out/"

# check parameter count
if [[ $# -lt 1 ]];then
    echo $Usage
    exit 2
fi

# target file setup 
input=${!#}
comptype=0
filename=$(basename "$input" 2> /dev/null) 
extension="${filename##*.}"
base="${filename%.*}"
outputc="${Outfold}${base}.c"
outputh="${Outfold}${base}.h"
outputm="${Outfold}${base}.o"
objectify=-c


# get options 
while getopts "$options" OPTION
do
	case $OPTION in

    # compile naively
    n)  comptype=1
        outputm="${Outfold}${base}_${comptype}.o"
        ;;

    # compile securely
    s)  comptype=0
        ;;

    d) debug="-D DEBUG" 
        ;;

    # has main function
    r)  execute=$OPTARG 
        outputm="${Outfold}${base}.exec"
        objectify=''
        break;; 
  esac
done


$Compiler -t $comptype -o $outputc -h $outputh $input > /tmp/tmpfile
res=$?
if [[ $res -ne 0 ]];then
    if [[ $res -eq 5 ]]; then
        echo "MiniML type checker failed"
        exit 2
    else
        echo "MiniML compiler failed"
        #echo "#> Result of :: $outputh"
        #cat $outputh
        #echo "#> Result of :: $outputc"
        #cat $outputc 
        exit 3
    fi
fi

# make executable
if [[ -n "$execute" ]]; then
  echo "int main(void){ load(); }" >> $outputc
fi

# Wno-unused-value is there for compiling sequence
gcc  $outputc $debug  -I./lib/  -std=c99 -g -Werror -Wfatal-errors -Wno-unused-value $objectify -o $outputm 

if [[ $? -ne 0 ]];then
    echo "------------------------------------------------------"
    echo "C Compilation failed"
    echo "------------------------------------------------------"
    cat /tmp/tmpfile
    exit 1
fi

exit 0
